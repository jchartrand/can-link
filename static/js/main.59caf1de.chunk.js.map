{"version":3,"sources":["canlink.png","hooks/useFetch.js","components/SolrSelect.js","datasets/uniMapping.js","components/MouseOverPopup.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","dataFetchReducer","state","action","type","isLoading","isError","data","payload","Error","useDataApi","useState","query","setQuery","useReducer","response","docs","dispatch","useEffect","didCancel","a","url","axios","get","result","console","log","fetchData","SolrSelect","control","items","title","defaultSelection","FormControl","variant","InputLabel","id","as","Select","labelId","label","name","defaultValue","MenuItem","value","map","val","key","uniMapping","useStyles","makeStyles","theme","popover","pointerEvents","paper","padding","spacing","unit","MouseOverPopup","item","classes","popupId","popupState","ListItem","alignItems","ListItemText","bindHover","primary","secondary","Fragment","Typography","component","className","inline","creator","Popover","bindPopover","anchorOrigin","vertical","horizontal","transformOrigin","disableRestoreFocus","abstract","year","subject","degree","institution","root","flexGrow","textAlign","color","palette","text","form","margin","bounds","minLat","minLong","maxLat","maxLong","STYLES","SVG","stroke","strokeWidth","strokeOpacity","DOM","border","MODE","dataForXYPlot","x","y","App","modeIndex","setModeIndex","useSVG","setUseSVG","uniList","setUniList","updateModeIndex","increment","newIndex","length","useFetch","doFetch","useForm","register","handleSubmit","watch","errors","React","active","uniListWithCounts","facets","categories","buckets","forEach","uniURL","hasOwnProperty","thesisCount","count","onSubmit","queryInputs","Grid","container","xs","src","canLinkLogo","alt","height","TextField","inputRef","Button","demo","List","dense","Map","center","zoom","style","width","TileLayer","attribution","Object","values","uni","index","radiusSize","Math","CircleMarker","coordinates","radius","fillOpacity","Popup","Paper","onClick","animation","colorType","colorRange","D3FlareData","mode","renderMode","getSize","d","getColor","hex","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.59caf1de.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/canlink.a83aaa0c.png\";","import{ useState, useEffect, useReducer } from 'react';\nimport axios from 'axios';\n\nconst SOLR_URL = `http://206.167.181.124:8983/solr/test/select?q=creator_first%3A$`\n\nconst dataFetchReducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_INIT':\n      return { \n        ...state, \n        isLoading: true, \n        isError: false \n    };\n    case 'FETCH_SUCCESS':\n      return {\n        ...state,\n        isLoading: false,\n        isError: false,\n        data: action.payload,\n      };\n    case 'FETCH_FAILURE':\n      return {\n        ...state,\n        isLoading: false,\n        isError: true,\n      };\n    default:\n      throw new Error();\n  }\n};\n\nconst useDataApi = () => {\n  const [query, setQuery] = useState({query:'Geoffrey'});\n\n  const [state, dispatch] = useReducer(dataFetchReducer, {\n    isLoading: false,\n    isError: false,\n    data: { response: {docs:[]} }\n  });\n\n  useEffect(() => {\n    let didCancel = false;\n\n    const fetchData = async () => {\n      dispatch({ type: 'FETCH_INIT' });\n\n      try {\n        const url = `${SOLR_URL}${query.query}`\n        const result = await axios.get(url)\n\n      console.log('solr search result')\n      console.log(result)\n        if (!didCancel) {\n          dispatch({ type: 'FETCH_SUCCESS', payload: result.data });\n        }\n      } catch (error) {\n        if (!didCancel) {\n          dispatch({ type: 'FETCH_FAILURE' });\n        }\n      }\n    };\n\n    fetchData();\n\n    return () => {\n      didCancel = true;\n    };\n  }, [query]);\n\n  return [state, setQuery];\n};\n\nexport default useDataApi;\n\n\n","import React from 'react';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport {Controller} from \"react-hook-form\";;\n\n\n\nfunction SolrSelect({control, items = [], title, defaultSelection}) {\n \nreturn (\n    <FormControl variant=\"outlined\" >\n        <InputLabel id=\"demo-simple-select-outlined-label\">{title}</InputLabel>\n        <Controller\n            as={Select}\n            labelId=\"demo-simple-select-outlined-label\"\n            id=\"demo-simple-select-outlined\"\n            //value={'Physics'}\n            control={control}\n            label={title}\n            name={title}\n            defaultValue={'*'}\n        >\n            <MenuItem value=\"*\">\n                <em>{defaultSelection}</em>\n            </MenuItem>\n            {items.map((val)=>(<MenuItem value={val} key={val}>{val}</MenuItem>))}\n        </Controller>\n    </FormControl>\n)\n}\n\n            export default SolrSelect","let uniMapping = {\n    \"http://canlink.library.ualberta.ca/institution/University_of_Alberta\":\n        {\n            \"name\":\"University of Alberta\",\n            \"coordinates\": [53.5213, -113.5213]\n        },\n    \"http://canlink.library.ualberta.ca/institution/Memorial_University_of_Newfoundland\":\n        {\n            \"name\":\"University of Newfoundland\",\n            \"coordinates\": [47.5720, -52.7327]\n        },\n    \"http://canlink.library.ualberta.ca/institution/Queen's_University\":\n        {\n            \"name\":\"Queen's University\",\n            \"coordinates\": [44.2250, -76.4951]\n        },\n    \"http://canlink.library.ualberta.ca/institution/Tunis_University\":\n        {\n            \"name\":\"Tunis University\",\n            \"coordinates\": [36.8190, 10.1658]\n        },\n    \"http://canlink.library.ualberta.ca/institution/Université_de_Montréal\":\n        {\n            \"name\":\"Université de Montréal\",\n            \"coordinates\": [45.5042, -73.6181]\n        },\n    \"http://canlink.library.ualberta.ca/institution/University_of_Ottawa\":\n        {\n            \"name\":\"University of Ottawa\",\n            \"coordinates\": [45.4222, -75.6824]\n        },\n    \"http://canlink.library.ualberta.ca/institution/University_of_Regina\":\n        {\n            \"name\":\"University of Regina\",\n            \"coordinates\": [50.4093, -104.5861 ]\n        },\n    \"http://canlink.library.ualberta.ca/institution/Dalhousie_University\":\n        {\n            \"name\":\"Dalhousie University\",\n            \"coordinates\": [44.6355, -63.5883]\n        },\n    \"http://canlink.library.ualberta.ca/institution/Carleton_University\":\n        {\n            \"name\":\"Carleton University\",\n            \"coordinates\": [45.3831,-75.6976 ]\n        },\n    \"http://canlink.library.ualberta.ca/institution/University_of_Victoria\":\n        {\n            \"name\":\"University of Victoria\",\n            \"coordinates\": [48.4633, -123.3118]\n        },\n    \"http://canlink.library.ualberta.ca/institution/University_of_Waterloo\":\n        {\n            \"name\":\"University of Waterloo\",\n            \"coordinates\": [43.4680, -80.5373 ]\n        },\n    \"http://canlink.library.ualberta.ca/institution/Royal_Roads_University\":\n        {\n            \"name\":\"Royal Roads University\",\n            \"coordinates\": [48.433998264, -123.470331452 ]\n        },\n    \"http://canlink.library.ualberta.ca/institution/University_of_Manitoba\":\n        {\n            \"name\":\"University of Manitoba\",\n            \"coordinates\": [49.80603,-97.13972 ]\n        },\n    \"http://canlink.library.ualberta.ca/institution/University_of_Ontario_Institute_of_Technology\":\n        {\n            \"name\":\"University of Ontario Institute of Technology\",\n            \"coordinates\": [43.89863,-78.86212]\n        },\n    \"http://canlink.library.ualberta.ca/institution/Brock_University\":\n        {\n            \"name\":\"Brock University\",\n            \"coordinates\": [43.1190,-79.2490]\n        },\n    \"http://canlink.library.ualberta.ca/institution/Concordia_University\":\n        {\n            \"name\":\"Concordia University\",\n            \"coordinates\": [45.4974,-73.5771]\n        },\n    \"http://canlink.library.ualberta.ca/institution/University_of_Lethbridge\":\n        {\n            \"name\":\"University of Lethbridge\",\n            \"coordinates\": [49.6667,-112.8583 ]\n        },\n    \"http://canlink.library.ualberta.ca/institution/University_of_Saskatchewan\":\n        {\n            \"name\":\"University of Saskatchewan\",\n            \"coordinates\": [52.1245611684,-106.626344161],\n\n        },\n    \"http://canlink.library.ualberta.ca/institution/Laurentian_University\":\n        {\n            \"name\":\"Laurentian University\",\n            \"coordinates\": [46.4596,-80.9690]\n        },\n    \"http://canlink.library.ualberta.ca/institution/University_of_Guelph\":\n        {\n            \"name\":\"University of Guelph\",\n            \"coordinates\": [ 43.5266,-80.2208]\n        },\n    \"http://canlink.library.ualberta.ca/institution/Athabasca_University\":\n        {\n            \"name\":\"Athabasca University\",\n            \"coordinates\": [54.7201,-113.3020]\n        },\n    \"http://canlink.library.ualberta.ca/institution/Morioka_University\":\n        {\n            \"name\":\"Morioka University\",\n            \"coordinates\": [39.7000, 141.1500]\n        },\n    \"http://canlink.library.ualberta.ca/institution/York_University\":\n        {\n            \"name\":\"York University\",\n            \"coordinates\": [43.7705, -79.5022]\n        },\n    \"http://canlink.library.ualberta.ca/institution/OCAD_University\":\n        {\n            \"name\":\"OCAD University\",\n            \"coordinates\": [43.651830726, -79.3880484478]\n        },\n    \"http://canlink.library.ualberta.ca/institution/International_Design_School\":\n        {\n            \"name\":\"International Design School\",\n            \"coordinates\": [-6.213898,106.834788]\n        },\n    \"http://canlink.library.ualberta.ca/institution/McGill_University\":\n        {\n            \"name\":\"McGill University\",\n            \"coordinates\": [45.5041,-73.5747]\n        },\n    \"http://canlink.library.ualberta.ca/institution/Memorial_University_of_Newfoundland_Faculty_of_Medicine\":\n        {\n            \"name\":\"Memorial University of Newfoundland Faculty of Medicine\",\n            \"coordinates\": [47.5701510527, -52.7382937135]\n        },\n    \"http://canlink.library.ualberta.ca/institution/University_of_Toronto\":\n        {\n            \"name\":\"University of Toronto\",\n            \"coordinates\": [43.656997372, -79.390331772]\n        }\n}\n\nexport default uniMapping","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport Popover from '@material-ui/core/Popover'\nimport PopupState, { bindHover, bindPopover } from 'material-ui-popup-state'\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nconst useStyles = makeStyles(theme => ({\n  popover: {\n    pointerEvents: 'none',\n  },\n  paper: {\n    padding: theme.spacing.unit,\n  },\n}))\n\nconst MouseOverPopup = ({ item }) => {\n    const classes = useStyles();\n    return (\n  <PopupState variant=\"popover\" popupId=\"demoPopover\">\n    {popupState => (\n      <div>\n        <ListItem alignItems=\"flex-start\" key={item.id}>\n            <ListItemText \n                {...bindHover(popupState)}\n                primary={item.title[0]}\n                secondary={<React.Fragment>\n                    <Typography\n                    component=\"span\"\n                    variant=\"body2\"\n                    className={classes.inline}\n                    >\n                    {item.creator[0]}\n                    </Typography>\n                </React.Fragment>}\n                />\n        </ListItem>\n        <Popover\n          {...bindPopover(popupState)}\n          className={classes.popover}\n          classes={{\n            paper: classes.paper,\n          }}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'center',\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'center',\n          }}\n          disableRestoreFocus\n        >\n            <Typography component=\"span\"\n                    variant=\"body2\">\n                <Typography variant=\"h6\" >\n                    Abstract\n                </Typography> \n            \n                {item.abstract?`Abstract: ${item.abstract}`:'No abstract available.'}\n                <Typography variant=\"h6\" >\n                    Year\n                </Typography> \n                {item.year}\n                <Typography variant=\"h6\" >\n                    Subject\n                </Typography> \n                {item.subject}\n                <Typography variant=\"h6\" >\n                    Degree\n                </Typography> \n                {item.degree}\n                <Typography variant=\"h6\" >\n                    Institution\n                </Typography> \n                {item.institution}\n            </Typography>\n\n        </Popover>\n      </div>\n    )}\n  </PopupState>\n)}\n\nMouseOverPopup.propTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\nexport default MouseOverPopup","import React, {useState} from 'react';\nimport './App.css';\nimport useFetch from './hooks/useFetch'\nimport axios from 'axios';\nimport {XYPlot, LineSeries, Treemap} from 'react-vis';\nimport { Map, Marker, Popup, TileLayer, CircleMarker } from 'react-leaflet'\nimport canLinkLogo from './canlink.png'//\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport FormControl from '@material-ui/core/FormControl';\nimport Popover from '@material-ui/core/Popover';\n\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport SolrSelect from './components/SolrSelect'\n\nimport '../node_modules/react-vis/dist/style.css';\nimport '../node_modules/leaflet/dist/leaflet.css'\nimport D3FlareData from './datasets/d3-flare-example.json';\n\nimport bubbleTestData from './datasets/bubbleTestData';\nimport uniMapping from './datasets/uniMapping'\n\nimport MouseOverPopup from './components/MouseOverPopup'\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\nimport { useForm } from \"react-hook-form\";\n\nconst SOLR_URL = \"http://206.167.181.124:8983/solr/test\";\n\nconst UNI_FACET_QUERY = \"/query?q=*:*&rows=0&json.facet={categories : {type : terms,field : institution_str,limit : 100 }}\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  form: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  popover: {\n    pointerEvents: 'none',\n  },\n}));\n\nconst minLat = -6.213898;\nconst maxLat = 54.7201;\nconst minLong = -123.470331452;\nconst maxLong = 141.1500;\n\nconst centerLat = (minLat + maxLat) / 2;\nconst distanceLat = maxLat - minLat;\nconst bufferLat = distanceLat * 0.05;\nconst centerLong = (minLong + maxLong) / 2;\nconst distanceLong = maxLong - minLong;\nconst bufferLong = distanceLong * 0.15;\nconst bounds=[\n      [minLat - bufferLat, minLong - bufferLong],\n      [maxLat + bufferLat, maxLong + bufferLong]\n    ]\n///const SOCRATA_API_KEY_ID = \"9jhwf7q6yj994h6yg3e7do8m4\"\n//const SOCRATA_API_KEY_SECRET = \"39d7bzmbf7vmoiolc5lgyb7lcbp5an2qxe2gf5cqt6veoxmivr\"\n\nconst STYLES = {\n  SVG: {\n    stroke: '#ddd',\n    strokeWidth: '0.25',\n    strokeOpacity: 0.5\n  },\n  DOM: {\n    border: 'thin solid #ddd'\n  }\n};\n\nconst MODE = [\n  'circlePack',\n  'partition',\n  'partition-pivot',\n  'squarify',\n  'resquarify',\n  'slice',\n  'dice',\n  'slicedice',\n  'binary'\n];\n\nconst dataForXYPlot = [\n  {x: 0, y: 8},\n  {x: 1, y: 5},\n  {x: 2, y: 4},\n  {x: 3, y: 9},\n  {x: 4, y: 1},\n  {x: 5, y: 7},\n  {x: 6, y: 6},\n  {x: 7, y: 3},\n  {x: 8, y: 2},\n  {x: 9, y: 0}\n];\n\n\nfunction App() {\n\n  const classes = useStyles();\n\n  //Solr()\n  const [modeIndex, setModeIndex] = useState(0);\n  const [useSVG, setUseSVG] = useState(true)\n  const [uniList,setUniList] = useState({})\n\n  const updateModeIndex = increment => {\n    const newIndex = modeIndex + (increment ? 1 : -1);\n    setModeIndex(newIndex < 0 ? MODE.length - 1 : newIndex >= MODE.length ? 0 : newIndex);\n  };\n\n  const [{ data, isLoading, isError }, doFetch] = useFetch();\n  \n  const { register, handleSubmit, watch, control, errors } = useForm();\n  const onSubmit = queryInputs => {\n    console.log(queryInputs)\n    doFetch(queryInputs);\n  }\n  console.log(watch(\"Discipline\")); // watch input value by passing the name of it\n\n  React.useEffect(() => {\n    let active = true;\n\n    const fetchData = async () => {\n      const url = `${SOLR_URL}${UNI_FACET_QUERY}`\n      const result = await axios(url);\n \n      if (active) {\n        let uniListWithCounts = { ...uniMapping };\n        result.data.facets.categories.buckets.forEach((result)=>{\n          const uniURL = result.val\n          if (uniListWithCounts.hasOwnProperty(uniURL)) {\n            uniListWithCounts[uniURL].thesisCount = result.count;\n          }\n        })\n        console.log(\"uniListWithCounts\")\n        console.log(uniListWithCounts)\n        setUniList(uniListWithCounts);\n      }\n    };\n \n    fetchData();\n \n    return () => {\n      active = false;\n    };\n  }, []);\n\n   \n   \n\n  return (\n    <div className=\"App\">\n\n    <div className={classes.root}>\n      \n   \n      <form onSubmit={handleSubmit(onSubmit)} className={classes.form}>\n      <Grid container spacing={3}>\n        <Grid item xs={1}>\n          <img src={canLinkLogo} alt={'logo'} height={'35px'}/>\n        </Grid>\n        <Grid item xs={2} >\n            <FormControl> <TextField  variant={'outlined'} label={\"query\"} inputRef={register} name=\"query\" defaultValue=\"geoffrey\"  /></FormControl>\n        </Grid>\n        <Grid item xs={2} >\n           <SolrSelect control={control} title={'Discipline'} defaultSelection={'All Disciplines'} items={['Desgin', 'Natural Sciences', 'Social Sciences']}/>\n        </Grid>\n        <Grid item xs={2} >\n           <SolrSelect control={control} title={'Subject'} defaultSelection={'All Subjects'} items={['Physics', 'Chemistry', 'Biology']}/>\n        </Grid>\n        <Grid item xs={2} >\n           <SolrSelect control={control} title={'University'} defaultSelection={'All Universities'} items={['Alberta', 'Queen\\'s', 'McMaster']}/>\n        </Grid>\n        <Grid item xs={2} >\n           <SolrSelect control={control} title={'Agent'} defaultSelection={'All Agents'} items={['Farnel', 'Davoodi', 'Fiorentino', 'Cole', 'Paredes-Olea', 'Huck']}/>\n        </Grid>\n        <Grid item xs={1} >\n            <Button type=\"submit\" >Search</Button>\n        </Grid>\n        </Grid>\n      </form>\n      <Grid container spacing={3}>\n           {isError && <div>Something went wrong ...</div>}\n \n              {isLoading ? (\n                <div>Loading ...</div>\n              ) : (\n                <Grid container spacing={1}>\n                      <Grid item xs={4}>\n                  \n                      <div className={classes.demo}>\n                        <List dense={true}>\n                          {data.response.docs.map(item => (\n                            <MouseOverPopup item={item}/>))}\n                        </List>\n                      </div>\n                    </Grid>\n\n                    <Grid item xs={8}>\n\n                              <Map \n                                center={[centerLat, centerLong]} \n                                zoom={1} \n                                style={{ width: '100%', height: '400px'}}\n                                bounds={bounds}>\n                                <TileLayer\n                                  url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                                  attribution=\"&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\n                                />\n                                \n                               \n                         \n                                {Object.values(uniList).map((uni,index) => {\n                                  let radiusSize = 20 * Math.log(uni.thesisCount / 100)\n                               \n                                  if (radiusSize < 10) {\n                                      radiusSize = 10\n                                  } else if (radiusSize > 30) {\n                                    radiusSize = 30\n                                  }\n                                  return (\n                                      <CircleMarker\n                                        key={index}\n                                        center={uni.coordinates}\n                                        radius={radiusSize}\n                                        fillOpacity={0.5}\n                                        stroke={false}\n                                      >\n                                        <Popup>{uni.name}<br />{uni.thesisCount}</Popup>\n                                      </CircleMarker>\n                                  )})\n                                }\n\n                             \n                                </Map>\n\n                        </Grid>\n                </Grid>\n              )}\n           \n       \n        <Grid item xs={6}>\n          <Paper className={classes.paper}><XYPlot height={300} width={300}>\n  <LineSeries data={dataForXYPlot} />\n</XYPlot></Paper>\n        </Grid>\n        <Grid item xs={6}>\n          <Paper className={classes.paper}>\n            \n            <div className=\"centered-and-flexed\">\n            <div className=\"centered-and-flexed-controls\">\n              <button className=\"showcase-button\"\n                onClick={() => setUseSVG(!useSVG)}>\n                  {useSVG ? 'USE DOM' : 'USE SVG'}\n              </button>\n            </div>\n            <div className=\"centered-and-flexed-controls\">\n              <button className=\"showcase-button\"\n                onClick={() => updateModeIndex(false)}>\n                  PREV MODE\n              </button>\n              <button className=\"showcase-button\"\n                onClick={() => updateModeIndex(true)}>\n                  NEXT MODE\n              </button>\n\n\n              <Treemap\n                {...{\n                  animation: true,\n                  className: 'nested-tree-example',\n                  colorType: 'literal',\n                  colorRange: ['#88572C'],\n                  data: D3FlareData,\n                  mode: MODE[modeIndex],\n                  renderMode: useSVG ? 'SVG' : 'DOM',\n                  height: 300,\n                  width: 350,\n                  margin: 10,\n                  getSize: d => d.value,\n                  getColor: d => d.hex,\n                  style: STYLES[useSVG ? 'SVG' : 'DOM']\n                }}\n            />\n            </div>\n\n            </div>\n          </Paper>\n        </Grid>\n      </Grid>\n    </div>\n  \n\n\n\n\n\n\n\n\n\n      \n \n    </div>\n   \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}